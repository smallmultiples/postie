// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter, Postie,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Postie = (function(_super) {
    __extends(Postie, _super);

    function Postie(target, url) {
      this.target = target;
      this.url = url;
      this.handleMessage = __bind(this.handleMessage, this);
      if (!this.url) {
        this.url = '*';
      }
      if (self.addEventListener) {
        self.addEventListener('message', this.handleMessage);
      } else {
        self.attachEvent('onmessage', this.handleMessage);
      }
    }

    Postie.prototype.handleMessage = function(event) {
      var error, pkg;
      try {
        pkg = JSON.parse(event.data);
        return this.emit(pkg.name, pkg.message);
      } catch (_error) {
        error = _error;
        return this.emit('error', error);
      }
    };

    Postie.prototype.post = function(name, message) {
      return this.target.postMessage(JSON.stringify({
        name: name,
        message: message
      }), this.url);
    };

    return Postie;

  })(EventEmitter);

  module.exports = Postie;

}).call(this);
