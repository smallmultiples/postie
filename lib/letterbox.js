// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter, LetterBox, Readable, handleMessage, messages,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Readable = require('readable-stream').Readable;

  EventEmitter = require('events').EventEmitter;

  if (window.addEventListener) {
    window.addEventListener('message', handleMessage);
  } else {
    window.attachEvent('onmessage', handleMessage);
  }

  messages = new EventEmitter;

  handleMessage = function(event) {
    var error, pkg;
    console.log(event);
    try {
      pkg = JSON.parse(event.data);
      if (typeof pkg.name !== 'undefined') {
        return messages.emit(pkg.name, pkg.message);
      }
    } catch (_error) {
      error = _error;
    }
  };

  LetterBox = (function(_super) {
    __extends(LetterBox, _super);

    function LetterBox(name) {
      this.name = name;
      LetterBox.__super__.constructor.call(this, {
        objectMode: true
      });
    }

    LetterBox.prototype._read = function(size) {
      var _this = this;
      return messages.on(this.name, function(data) {
        if (!_this.push(data)) {
          return messages.off(_this.name);
        }
      });
    };

    return LetterBox;

  })(Readable);

  module.exports = LetterBox;

}).call(this);
